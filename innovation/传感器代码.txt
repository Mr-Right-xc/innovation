#include "HX711.h"
float Weight = 0;


#define INTERVAL_SENSOR   17000             //定义传感器采样时间间隔  597000

#define INTERVAL_NET      17000             //定义发送时间

//传感器部分================================   

#include <Wire.h>                                  //调用库  



//温湿度   



//光照

#define  sensorPin_1  A0



#define SSID        "iPhone" //改为你的Wi-Fi名称

#define PASSWORD    "whw66612"//Wi-Fi密码

#define HOST_NAME   "api.heclouds.com"

#define DEVICEID    "505364171" //OneNet上的设备ID

#define PROJECTID   "193334" //OneNet上的产品ID

#define HOST_PORT   (80)

String apiKey="QtPTgXinXoKJDzameUKf=xsarFY=";//与你的设备绑定的APIKey



#define INTERVAL_SENSOR   17000             //定义传感器采样时间间隔  597000

#define INTERVAL_NET      17000             //定义发送时间

//传感器部分================================   

#include <Wire.h>                                  //调用库  

#include <ESP8266.h>

#include <I2Cdev.h>                                //调用库  

/*******温湿度*******/

#include <Microduino_SHT2x.h>

/*******光照*******/

#define  sensorPin_1  A0

#define IDLE_TIMEOUT_MS  3000      // Amount of time to wait (in milliseconds) with no data 

                                   // received before closing the connection.  If you know the server

                                   // you're accessing is quick to respond, you can reduce this value.



//WEBSITE     

char buf[10];



#define INTERVAL_sensor 2000

unsigned long sensorlastTime = millis();



float tempOLED, humiOLED, lightnessOLED;



#define INTERVAL_OLED 1000



String mCottenData;

String jsonToSend;



//3,传感器值的设置 

float sensor_tem, sensor_hum, sensor_lux;                    //传感器温度、湿度、光照   

char  sensor_tem_c[7], sensor_hum_c[7], sensor_lux_c[7] ;    //换成char数组传输

#include <SoftwareSerial.h>

#define EspSerial mySerial

#define UARTSPEED  9600

SoftwareSerial mySerial(2, 3); /* RX:D3, TX:D2 */

ESP8266 wifi(&EspSerial);

//ESP8266 wifi(Serial1);                                      //定义一个ESP8266（wifi）的对象

unsigned long net_time1 = millis();                          //数据上传服务器时间

unsigned long sensor_time = millis();                        //传感器采样时间计时器



//int SensorData;                                   //用于存储传感器数据

String postString;                                //用于存储发送数据的字符串

//String jsonToSend;                                //用于存储发送的json格式参数



Tem_Hum_S2 TempMonitor;  
void setup(void)
{     Init_Hx711();       //初始化HX711模块连接的IO设置

  Serial.begin(9600);
  Serial.print("Welcome to use!\n");

  delay(3000);
  Get_Maopi();    //获取毛皮

    Wire.begin();

    Serial.begin(115200);

    while (!Serial); // wait for Leonardo enumeration, others continue immediately

    Serial.print(F("setup begin\r\n"));

    delay(100);

    pinMode(sensorPin_1, INPUT);



  WifiInit(EspSerial, UARTSPEED);



  Serial.print(F("FW Version:"));

  Serial.println(wifi.getVersion().c_str());



  if (wifi.setOprToStationSoftAP()) {

    Serial.print(F("to station + softap ok\r\n"));

  } else {

    Serial.print(F("to station + softap err\r\n"));

  }



  if (wifi.joinAP(SSID, PASSWORD)) {

    Serial.print(F("Join AP success\r\n"));



    Serial.print(F("IP:"));

    Serial.println( wifi.getLocalIP().c_str());

  } else {

    Serial.print(F("Join AP failure\r\n"));

  }



  if (wifi.disableMUX()) {

    Serial.print(F("single ok\r\n"));

  } else {

    Serial.print(F("single err\r\n"));

  }





}
void loop(void)
{
Weight = Get_Weight();  //计算放在传感器上的重物重量
  Serial.print(Weight,3); //串口显示重量
  Serial.print(" g\n");  //显示单位
  Serial.print("\n");   //显示单位
  delay(1);        //延时1s

 
if (sensor_time > millis())  sensor_time = millis();  

    

  if(millis() - sensor_time > INTERVAL_SENSOR)              //传感器采样时间间隔  

  {  

    getSensorData();                                        //读串口中的传感器数据

    sensor_time = millis();

  }  



    

  if (net_time1 > millis())  net_time1 = millis();

  

  if (millis() - net_time1 > INTERVAL_NET)                  //发送数据时间间隔

  {                

    updateSensorData();                                     //将数据上传到服务器的函数

    net_time1 = millis();

  }

  

}



void getSensorData(){  

    sensor_tem =  Get_Weight();  

    sensor_hum = TempMonitor.getHumidity();   

    //获取光照
     sensor_lux = analogRead(A0);

    delay(1000);

    dtostrf(sensor_tem, 2, 1, sensor_tem_c);

    dtostrf(sensor_hum, 2, 1, sensor_hum_c);

  dtostrf(sensor_lux, 3, 1, sensor_lux_c);
}

void updateSensorData() {

 if (wifi.createTCP(HOST_NAME, HOST_PORT)) { //建立TCP连接，如果失败，不能发送该数据

    Serial.print("create tcp ok\r\n");




    jsonToSend+=",\"yali\":";

    dtostrf(sensor_tem,1,2,buf);

    jsonToSend+="\""+String(buf)+"\"";

    jsonToSend+="}";







    postString="POST /devices/";

    postString+=DEVICEID;

    postString+="/datapoints?type=3 HTTP/1.1";

    postString+="\r\n";

    postString+="api-key:";

    postString+=apiKey;

    postString+="\r\n";

    postString+="Host:api.heclouds.com\r\n";

    postString+="Connection:close\r\n";

    postString+="Content-Length:";

    postString+=jsonToSend.length();

    postString+="\r\n";

    postString+="\r\n";

    postString+=jsonToSend;

    postString+="\r\n";

    postString+="\r\n";

    postString+="\r\n";



  const char *postArray = postString.c_str();                 //将str转化为char数组

  Serial.println(postArray);

  wifi.send((const uint8_t*)postArray, strlen(postArray));    //send发送命令，参数必须是这两种格式，尤其是(const uint8_t*)

  Serial.println("send success");   

     if (wifi.releaseTCP()) {                                 //释放TCP连接

        Serial.print("release tcp ok\r\n");

        } 

     else {

        Serial.print("release tcp err\r\n");

        }

      postArray = NULL;                                       //清空数组，等待下次传输数据

  

  } else {

    Serial.print("create tcp err\r\n");

  }

}
